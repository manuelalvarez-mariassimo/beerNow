<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>{{title}}</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.css">
  <link rel="stylesheet" href="/stylesheets/style.css" />
  <script src="https://kit.fontawesome.com/9c01b07d37.js" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.min.js"></script>
</head>

<body>

  <div id="animation"></div>

  <nav>
    <a href="/"><img src="/images/beer-now.png" alt="BeerNow Logo" id="logo"></a>
    <div class="menu">
      <a href="/auth/login">Login</a>
      <a href="/auth/signup">Signup</a>
    </div>
  </nav>

  <main>
    <section>
      <div class="home-container container">
        <div id="address-form" class="field has-addons">
          <div class="control">
            <input class="input" id="address" type="text" placeholder="You can add your address here"
              value="Piazza del Colosseo, 1, 00184 Roma RM, Italia">
          </div>
          <div class="control">
            <a class="button is-info" id="address-button" onclick="animationLoad()">
              Search
            </a>
          </div>
        </div>

        <div>
          <h2 class="title is-3">Let me guess... Time for a beer, right?</h2>
          <h3 class="subtitle is-6">Press the button and we'll<br>geolocate your position</h3>
        </div>

        <button type="button" id="locate-button" onclick="animationLoad()"><img src="/images/icon-beer.svg"></button>
      </div>
    </section>
  </main>

  <footer>
    <a>BeerNow Â© 2019</a>
  </footer>

  <script>

    let animDOMEL = document.querySelector('#animation')

    const randomFloat = (min, max) => Math.random() * (max - min) + min;
    const randomInt = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);
    const shuffle = array => array.sort(() => Math.random() - 0.5);


    function animationLoad() {
      animDOMEL.classList.add("cup")

      Array(170)
        .fill()
        .forEach((_, idx) => {
          let bubbleDOMEl = document.createElement("div")
          bubbleDOMEl.className = "bubble"
          bubbleDOMEl.style.height = bubbleDOMEl.style.width = `${randomFloat(5, 20)}px`
          bubbleDOMEl.style.left = `${randomFloat(0, window.innerWidth)}px`
          bubbleDOMEl.style.bottom = `${randomFloat(-200, -500)}px`
          bubbleDOMEl.style.zIndex = 1000

          animDOMEL.appendChild(bubbleDOMEl)
        })


      document.querySelectorAll(".bubble").forEach((bubbleDOMEl) => {
        bubbleDOMEl.style.bottom = `${randomFloat(0, window.innerHeight - 100)}px`
      })

    }

    let country;
    let user_location;
    let addressInput = document.querySelector('#address')
    let addressBtn = document.querySelector('#address-button')
    let locateBtn = document.querySelector('#locate-button')

    let myVar;

    addressBtn.addEventListener("click", function () {
      myVar = setTimeout(function () { getCoords() }, 5000);
    })

    locateBtn.addEventListener("click", function () {
      myVar = setTimeout(function () { getGeoloc(coordsAvailable) }, 5000);
    })


    function getCoords() {
      // how to pass coords to url
      if (addressInput.value) {
        let addressStr = addressInput.value

        return axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${addressStr}&language=en&key=AIzaSyD_zFC1JIj0EgKS8Fp0GZw3MiXR1wiDxEg`)
          .then(addressPayLoad => {

            console.log(addressPayLoad)
            return coords = {
              lat: addressPayLoad.data.results[0].geometry.location.lat,
              lng: addressPayLoad.data.results[0].geometry.location.lng,
              address: addressPayLoad.data.results[0].address_components
            }

          })
          .then(coords => {
            getLanguage(coords)
          })
      }
    }



    function getGeoloc(cb) {
      navigator.geolocation.getCurrentPosition(pos => {
        return cb(pos);
      })
    }


    function coordsAvailable(pos) {
      let coords = {
        lat: pos.coords.latitude,
        lng: pos.coords.longitude
      };
      console.log(coords);

      return axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${coords.lat},${coords.lng}&language=en&key=AIzaSyD_zFC1JIj0EgKS8Fp0GZw3MiXR1wiDxEg`)
        .then(addressPayLoad => {
          return coords = {
            lat: addressPayLoad.data.results[0].geometry.location.lat,
            lng: addressPayLoad.data.results[0].geometry.location.lng,
            address: addressPayLoad.data.results[0].address_components
          }

        })
        .then(coords => {
          getLanguage(coords)
        })
    }



    function getLanguage(coords) {
      axios.get(`https://restcountries.eu/rest/v2/all?fields=latlng;name;languages`)
        .then(res => {
          let lan, country, value, longRegex;
          let city = coords.address[3].long_name

          res.data.forEach(countryData => {

            for (const key in coords.address) {
              value = coords.address[key];
              //console.log(countryData.name, value.long_name, value.short_name)

              longRegex = new RegExp(/^value.long_name{0,10}$/);

              if (countryData.name === value.short_name || countryData.name === value.long_name || countryData.name.match(longRegex)) {
                country = countryData.name;

                lan = countryData.languages[0].iso639_1;

                return country, lan;
              }
            }
          })

          window.location.href = `/results/${country}/${city}/${lan}/${coords.lat},${coords.lng}`;
        })
    }
  </script>



</body>

</html>